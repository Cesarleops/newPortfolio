---
export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
		<meta name="twitter:card" content="summary_large_image" />
		
		<meta name="view-transition" content="same-origin" />
	</head>
	<body>
		<div id="content">
			<slot />
		</div>
		<footer class="text-center opacity-70 py-10 text-sm">
			Basado en el trabajo de <a class="text-sky-700 hover:underline" href='https://twitter.com/addyosmani/status/1673755274853900289?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Etweet%7Ctwtr%5Etrue'>Addy Osmani</a>
		</footer>
	</body>
</html>
<style is:global>
	
	@font-face {
	  font-family: 'Noir Pro';
	  src: url('../../fonts/noirpro.otf') format('opentype');
	}
  
	@font-face {
	  font-family: 'Noir Pro Light';
	  src: url('../../fonts/noirprolight.otf') format('opentype');
	}
</style>

<script>
	if (document.startViewTransition) {
		window.navigation.addEventListener('navigate', (event) => {
			const toUrl = new URL(event.destination.url)
	
		
			if (location.origin !== toUrl.origin) return
	

			event.intercept({
				async handler () {
				
					const response = await fetch(toUrl.pathname) 
					const text = await response.text()
			
					const [, data] = text.match(/<body>([\s\S]*)<\/body>/i)
	
					document.startViewTransition(() => {
					
						document.body.innerHTML = data
						document.documentElement.scrollTop = 0
					})
				}
			})
		})
	}
</script>